import os
import cv2

from google.colab import drive
drive.mount('/content/drive')

def enhance_image(image):
    # Convert image to LAB color space
    lab_image = cv2.cvtColor(image, cv2.COLOR_BGR2LAB)

    # Split the LAB image into L, A, and B channels
    l_channel, a_channel, b_channel = cv2.split(lab_image)

    # Apply CLAHE (Contrast Limited Adaptive Histogram Equalization) to L channel
    clahe = cv2.createCLAHE(clipLimit=3.0, tileGridSize=(8, 8))
    enhanced_l_channel = clahe.apply(l_channel)

    # Merge the enhanced L channel with the original A and B channels
    enhanced_lab_image = cv2.merge((enhanced_l_channel, a_channel, b_channel))

    # Convert LAB image back to RGB color space
    enhanced_rgb_image = cv2.cvtColor(enhanced_lab_image, cv2.COLOR_LAB2BGR)

    return enhanced_rgb_image

def remove_noise(image):
    # Apply Gaussian Blur to remove noise
    blurred_image = cv2.GaussianBlur(image, (5, 5), 0)

    return blurred_image
def enhance_and_save_images(input_folder, output_folder):
    # Create output folder if it doesn't exist
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Loop through each image in the input folder
    for filename in os.listdir(input_folder):
        if filename.endswith(".jpg") or filename.endswith(".png"):
            # Read the image
            image_path = os.path.join(input_folder, filename)
            image = cv2.imread(image_path)

            # Enhance the image
            enhanced_image = enhance_image(image)

            # Remove noise from the enhanced image
            denoised_image = remove_noise(enhanced_image)

            # Save the enhanced and denoised image to the output folder
            output_path = os.path.join(output_folder, filename)
            cv2.imwrite(output_path, denoised_image)
            print(f"Saved {output_path}")

# Example usage
input_folder = "/content/drive/MyDrive/PLD_3_Classes_256/Validation/Healthy"
output_folder = "/content/drive/MyDrive/Dataset/Validation/Healthy"
enhance_and_save_images(input_folder, output_folder)
